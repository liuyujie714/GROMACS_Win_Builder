name: Build Windows GROMACS with ROCM

on:
  push:
    branches:
      - master

env:
  gmxversion: "2024.4"
  gmxcompileto: C:/Temp/gmxfiles
  fftwversion: "3.3.9"
  fftwcompileto: C:/fftw3
  adcppto: C:/Temp/adcpp
  ROCM_PATH: C:\Program Files\AMD\ROCm\6.1

jobs:
  Windows:
    runs-on: windows-2022

    if: github.event.repository.owner.id == github.event.sender.id
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Cache Boost
        id: cache-boost
        uses: actions/cache@v4
        with:
          path: ${{github.workspace}}/boost_1_81_0
          key: ${{runner.os}}-boost1810

      - name: Cache FFTW3
        id: cache-fftw
        uses: actions/cache@v4
        with:
          path: ${{env.fftwcompileto}}
          key: ${{runner.os}}-fftw3.3.9

      - name: Cache LLVM 17
        id: cache-llvm
        uses: actions/cache@v4
        with:
          path: ${{github.workspace}}/llvm
          key: ${{runner.os}}-llvm-17

      - name: Cache ROCM 6.1
        id: cache-rocm
        uses: actions/cache@v4
        with:
          path: ${{env.ROCM_PATH}}
          key: ${{runner.os}}-rocm-6.1
            
      - name: Download ninja & wget & sed tools
        run: |
          choco install ninja wget sed

      - name: Install MinGW LLVM 17
        if: steps.cache-llvm.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          $llvmURL = "https://github.com/mstorsjo/llvm-mingw/releases/download/20231128/llvm-mingw-20231128-msvcrt-x86_64.zip"
          $llvmFolderName = $llvmUrl.Split("/")[-1].Split(".")[0]
          Invoke-WebRequest $llvmURL -OutFile $env:GITHUB_WORKSPACE\llvm.zip
          Expand-Archive $env:GITHUB_WORKSPACE\llvm.zip
          Move-Item $env:GITHUB_WORKSPACE\llvm\$llvmFolderName\* $env:GITHUB_WORKSPACE\llvm
          Remove-Item $env:GITHUB_WORKSPACE\llvm\$llvmFolderName
     
      - name: Build boost
        if: steps.cache-boost.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          $env:PATH = "$env:GITHUB_WORKSPACE\llvm\bin;$env:PATH"
          $boostURL = "https://boostorg.jfrog.io/artifactory/main/release/1.81.0/source/boost_1_81_0.7z"
          $boostFolderName = $boostUrl.Split("/")[-1].Split(".")[0]
          Invoke-WebRequest $boostURL -OutFile boost.7z
          7z.exe x boost.7z
          cd $boostFolderName
          .\bootstrap.bat clang
          .\b2.exe --with-context --with-fiber --with-atomic --with-filesystem --with-test toolset=clang address-model=64 variant=release --build-type=complete stage

      - name: Install ROCM HIP SDK
        if: steps.cache-rocm.outputs.cache-hit != 'true'
        run: |
          Get-ComputerInfo | Format-Table CsSystemType,OSName,OSDisplayVersion
          curl -Lfo setup.exe https://download.amd.com/developer/eula/rocm-hub/AMD-Software-PRO-Edition-24.Q3-WinSvr2022-For-HIP.exe
          Start-Process setup.exe -ArgumentList '-install' -NoNewWindow -Wait
      
      - name: Build AdaptiveCpp
        shell: pwsh
        run: |
           $env:PATH = "$env:GITHUB_WORKSPACE\llvm\bin;$env:PATH"
           wget https://github.com/AdaptiveCpp/AdaptiveCpp/archive/refs/tags/v24.06.0.tar.gz
           tar -xf v24.06.0.tar.gz 
           Set-Location AdaptiveCpp-24.06.0
           md build
           cd build
           cmake .. -G Ninja -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_INSTALL_PREFIX=${{ env.adcppto }} -DBOOST_ROOT="$env:GITHUB_WORKSPACE/boost_1_81_0" -DBoost_COMPILER=-clang17 -DBoost_ARCHITECTURE=-x64 -DCMAKE_BUILD_TYPE=Release 
           ninja install

           Copy-Item -Path "${{ env.adcppto }}\bin\libacpp-rt.dll" -Destination "${{ env.adcppto }}\bin\acpp-clang.dll"
           Set-Location ../..

      - name: Download Gromacs and FFTW
        shell: bash
        env:
          gmxdownloadlink: https://ftp.gromacs.org/gromacs/gromacs-${{env.gmxversion}}.tar.gz
          fftwlink: https://fftw.org/fftw-${{env.fftwversion}}.tar.gz
        run: |
          curl -Lfo gromacs_src.tar.gz ${{ env.gmxdownloadlink }}
          tar xf gromacs_src.tar.gz
          curl -Lfo fftw_src.tar.gz ${{ env.fftwlink }}
          tar xf fftw_src.tar.gz

      - name: Compile FFTW single precision
        if: steps.cache-fftw.outputs.cache-hit != 'true'
        shell: pwsh
        run: |
          Set-Location fftw-${{ env.fftwversion }} 
          New-Item -ItemType Directory -Name build
          Set-Location build
          cmake .. -DCMAKE_INSTALL_PREFIX=${{ env.fftwcompileto }} -DENABLE_AVX=ON -DENABLE_AVX2=ON -DENABLE_SSE2=ON -DENABLE_THREADS=ON -DWITH_COMBINED_THREADS=ON -DENABLE_FLOAT=ON -DBUILD_SHARED_LIBS=ON -G "Visual Studio 17 2022" -T "v142" -A "x64"
          cmake --build . --target INSTALL --config Release -- "-maxCpuCount" "-p:CL_MPCount=3"
          Set-Location ..\..
          Remove-Item -Path fftw-${{ env.fftwversion }} -Force -Recurse

      - name: Configure build for amd64
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: amd64
          toolset: 14.29

      - name: Build ROCM GROMACS
        shell: pwsh
        if: ${{ success() }}
        run: |
          $env:PATH = "${{env.adcppto}}\bin;$env:PATH"

          Set-Location gromacs-${{ env.gmxversion }}
          mkdir build 
          Set-Location build

          cmake .. -G Ninja -DCMAKE_INSTALL_PREFIX=${{ env.gmxcompileto }} -DCMAKE_PREFIX_PATH="${{env.adcppto}};${{ env.fftwcompileto }};${{env.ROCM_PATH}}" -DAdaptiveCpp_DIR="${{env.adcppto}}\lib\cmake\AdaptiveCpp" -DSYCL_CXX_FLAGS_EXTRA="--acpp-clang-include-path=${{env.ROCM_PATH}}\lib\clang\19\include" -DGMX_SIMD=AVX2_256 -DGMX_GPU=SYCL -DGMX_SYCL=ACPP -DACPP_TARGETS="hip:gfx1100" -DCMAKE_C_COMPILER="${{env.ROCM_PATH}}\bin\clang.exe" -DCMAKE_CXX_COMPILER="${{env.ROCM_PATH}}\bin\clang++.exe" -DCMAKE_BUILD_TYPE=Release 

          sed -i 's/-MD/-MT/g' build.ninja
          ninja install -j4; if (-not $?) { ninja install -j1 }

          Set-Location ../..
          Remove-Item -Path gromacs-${{ env.gmxversion }} -Recurse -Force

      - name: Copy DLLs and Test
        shell: pwsh
        run: |
          Copy-Item -Path "${{ env.ROCM_PATH }}\bin\amdhip64_*.dll" -Destination "${{ env.gmxcompileto }}\bin\" -Force
          Copy-Item -Path "${{ env.fftwcompileto }}\bin\*.dll" -Destination "${{ env.gmxcompileto }}\bin\" -Force
          Set-Location ${{ env.gmxcompileto }}
          Set-Location ${{ env.gmxcompileto }}\bin
          .\gmx.exe -version

      - name: Upload Windows artifact
        uses: actions/upload-artifact@v4
        if: ${{ success() }}
        with:
          name: gmx_rocm_bins
          path: ${{ env.gmxcompileto }}
